@using Newtonsoft.Json
@using SmartApp.Models.DBModels
@using SmartApp.Models.ViewModels;
@model SmartApp.Models.ViewModels.AttendanceViewModel
@{
    ViewBag.Title = "Attendance";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int counter = 1;
    SessionUser user = new SessionUser();
    string myStr = "";
    //List<CreditDebit> CreditDebit = ViewBag.CreditDebit as List<CreditDebit>;

    //if (CreditDebit == null)
    //{
    //    CreditDebit = new List<SmartApp.Models.DBModels.CreditDebit>();
    //}
}

<style>
    .form-group .select2-container {
        position: relative;
        z-index: 2;
        float: left;
        width: 100%;
        height: 100%;
        margin-bottom: 0;
        display: table;
        table-layout: fixed;
    }

 
</style>




<div class="content-wrapper">
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                @*<div class="col-sm-6">
                        <h1 class="m-0 text-dark">Attendance</h1>
                    </div>*@<!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-left">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active">Attendance</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div>
    </div>

    <section class="content small">

        <div id="Filter" >
            <form id="AttendanceForm" method="post" action="@Url.Action("Attendance","Home")">
                <div class="card card-primary">
                    <div class="card-header">
                        <h5 class="card-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapseOne" class="collapsed" aria-expanded="false">
                                Filters
                            </a>
                        </h5>
                    </div>
                    <div id="collapseOne" class="panel-collapse in collapse show" style="">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-3">

                                    <div class="form-group">
                                        <label class="control-label sm">Company</label>
                                       @if (user.CompanyName != null)
                                       {

                                        <select2 :options="@user.CompanyName"  @@input="CompanyChange($event);" name="SelectedCompanies" v-bind:value=""></select2>

                                       }
                                        <select2 :options="Companies"  @@input="CompanyChange($event);" name="SelectedCompanies" v-bind:value="SelectedCompanies"></select2>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <label class="control-label">Region</label>
                                    @if (user.RegionName != null)
                                    {

                                        <select :options="@user.RegionName"  name="SelectedCompanies" ></select>

                                    }
                                    <select2 :options="Regions" multiple @@input="RegionChange($event);" ref="RegionList" name="SelectedRegions" v-bind:value="SelectedRegions"></select2>

                                </div>
                                <div class="col-md-3">
                                    <label class="control-label">Zone</label>
                                    <select2 :options="Zones" multiple @*@@input="ZoneChange($event);"*@ name="SelectedZones" v-bind:value="SelectedZones"></select2>

                                </div>
                                <div class="col-md-3">
                                    <label class="control-label">Territory</label>
                                    <select2 :options="Territories" multiple @*@@input="TerritoryChange($event);"*@ name="SelectedTerritories" v-bind:value="SelectedTerritories"></select2>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-md-4">
                                    <input type="text" class="form-control" id="Search" name="SearchBox" v-model="SearchBox" placeholder="Search" />
                                </div>

                                <div class="col-md-4">
                                    <input type="text" class="form-control datepicker" id="DateFrom" name="DateFrom" autocomplete="off" v-model="DateFrom" placeholder="DateFrom" />
                                </div>
                                <div class="col-md-4">
                                    @*<datepicker :value.sync="DateTo"></datepicker>*@
                                    <input type="text" class="form-control datepicker" id="DateTo" name="DateTo" autocomplete="off" v-model="DateTo" placeholder="DateTo" />
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <button class="btn btn-primary pull-right" type="submit">Filter</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>

        <div class="card">
            @*<div class="card-header d-flex p-0">
                <h3 class="card-title p-3">
                    <i class="fa fa-pie-chart mr-1"></i>
                    Sales
                </h3>
                @*<ul class="nav nav-pills ml-auto p-2">
                        <li class="nav-item">
                            <a class="nav-link active" href="#revenue-chart" data-toggle="tab">Area</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#sales-chart" data-toggle="tab">Donut</a>
                        </li>
                    </ul>*@
            @*</div>*@
            <div class="card-body">
            
                <div class="table table-responsive ">

                    <table  class="table table-striped DataTable" style="width:100% !important">
                        <thead>
                                <tr >
                                    <th>SrlNum</th>
                                    <th>Company</th>
                                    <th>Region</th>
                                    <th>Zone</th>
                                    <th>Territory</th>
                                    <th>UserName</th>
                                    <th>Address</th>
                                    <th>Record Date</th>
                                    <th>Record Time</th>
                                    <th>Activity/Status</th>
                                    <th>Remarks</th>

                                </tr>
                            </thead>

                        <tbody>

                            @if (ViewBag.ListDetails != null)
                            {

                                foreach (var comp in ViewBag.ListDetails)
                                {
                                    
                                    <tr>
                                        
                                        <td>@comp.SrlNo</td>
                                        <td>@comp.Company</td>
                                        <td>@comp.Region</td>
                                        <td>@comp.Zone</td>
                                        <td>@comp.Territory</td>
                                        <td>@comp.UserName</td>
                                        <td>@comp.Village</td>
                                        <td>@DateTime.Parse(comp.VDate.ToString()).ToString("yyyy-MM-dd")</td>
                                        <td>@DateTime.Parse(comp.ServerTime.ToString()).ToString("hh:mm tt")</td>
                                        <td style="background-color:@(comp.color)!important">@comp.VType</td>
                                        <td>@comp.Remarks</td>
                                   
                                    </tr>
                                    
                                }
                         
                            }
                        </tbody>
                    
                    </table>
                </div>
            </div>
        </div>
    </section>
</div>

@section Scripts{
    <script>



        var Select2 = Vue.component('select2', {
            props: ['options', 'value'],
            mounted() {
                var vm = this;
                console.log("from mounted:" + this.value);
                $(this.$el)
                    // init select2
                    .select2({ data: this.options })
                    .val(this.value)
                    .trigger('change')
                    // emit event on change.
                    .on('change', function () {
                        vm.$emit('input', $(this).val());
                    });
            },

            watch: {
                value: function (value) {
                    if ([...value].sort().join(",") !== [...$(this.$el).val()].sort().join(","))
                        $(this.$el).val(value).trigger('change');
                },
                options(newOpts) {
                    console.log(this);
                    //$(this.$el).empty().select2({ data: options })
                    $(this.$el).empty().select2({
                        data: newOpts
                    })
                },
            },
            template: '<select class="form-control form-control-sm"></select>'
        })

            var element = new Vue({
                el: "#Filter",
                data: {
                    Companies: @Html.Raw(Json.Encode(Model.Companies.Select(x=>new { id = x.Compcode, text = x.Compabb }).ToList())),
                    SelectedCompanies: @Html.Raw(Json.Encode(Model.SelectedCompanies)),
                    Regions: @Html.Raw(Json.Encode(Model.Regions.Select(x => new { id = x.ID, text = x.Name }).ToList())),
                    SelectedRegions : @Html.Raw(Json.Encode(Model.SelectedRegions)),
                    Zones: @Html.Raw(Json.Encode(Model.Zones.Select(x => new { id = x.ID, text = x.Name }).ToList())),
                    SelectedZones: @Html.Raw(Json.Encode(Model.SelectedZones)),
                    Territories: @Html.Raw(Json.Encode(Model.Territories.Select(x => new { id = x.ID, text = x.Name }).ToList())),
                    SelectedTerritories: @Html.Raw(Json.Encode(Model.SelectedTerritories)),
                    SearchBox: @Html.Raw(Json.Encode(Model.SearchBox)),
                    DateFrom: '@Html.Raw(Model.DateFrom != null ?  ((DateTime)Model.DateFrom).ToString("yyyy-MM-dd") : "")',
                    DateTo: '@Html.Raw(Model.DateTo != null ? ((DateTime)Model.DateTo).ToString("yyyy-MM-dd") : "")',
                },
                mounted() {
                    var elements = $(this.$el).find(".datepicker").each(function () {
                        $(this).datepicker({
                            format: 'yyyy-mm-dd',
                        });
                    });
                },
                components: {
                    select2: Select2,
                    //datepicker : datepicker
                },
                methods: {
                    CompanyChange($event) {
                        var vm = this;
                        vm.SelectedCompanies = $event;
                        console.log($event);
                        if (vm.SelectedCompanies.length != 0) {
                            $.post("/Home/CompanyChange", { Companies: vm.SelectedCompanies }, function (resp) {
                                console.log(resp);
                                vm.Regions = resp.RegionDropdown;
                                vm.Zones = resp.ZoneDropdown;
                                vm.Territories = resp.TerritoryDropdown;
                            });
                        }
                    },
                    RegionChange($event) {
                        var vm = this;
                        vm.SelectedRegions = $event;
                        console.log($event);
                        if (vm.SelectedRegions.length != 0) {
                            $.post("/Home/RegionChange", { Companies: vm.SelectedCompanies, Regions: vm.SelectedRegions }, function (resp) {
                                console.log(resp);

                                vm.Zones = resp.ZoneDropdown;
                                vm.Territories = resp.TerritoryDropdown;
                            });
                        }
                    },
                    ZoneChange() {
                        var vm = this;
                        vm.SelectedZones = $event;
                        console.log($event);
                        if (vm.SelectedZones.length != 0) {
                            $.post("/Home/ZoneChange", { Companies: vm.SelectedCompanies, Regions: vm.SelectedRegions, Zones : vm.SelectedZones }, function (resp) {
                                vm.Territories = resp.TerritoryDropdown;
                            });
                        }
                    },
                }
            });


    </script>
}
